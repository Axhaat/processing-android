import java.nio.file.Files
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;

configurations {
    compile.extendsFrom compileAndCopy
}

dependencies {
    compile group: "org.processing", name: "pde", version: "${processingVersion}"

    compile group: "org.processing", name: "java-mode", version: "${processingVersion}"
    compile fileTree(include: ["AndroidMode.jar"], dir: '../../mode')

    compileAndCopy group: "com.android.tools", name: "sdklib", version: "${toolsLibVersion}"
    compileAndCopy group: "com.android.tools", name: "repository", version: "${toolsLibVersion}"
}

// This task copies the gradle tooling jar into the mode folder
task copyToLib(type: Copy) {
  from configurations.compileAndCopy.files {
    include '**/annotations-*'
    include '**/common-*'
    include '**/dvlib-*'
    include '**/gson-*'
    include '**/guava-*'
    include '**/httpcore-*'
    include '**/kotlin-stdlib-*'
    include '**/layoutlib-api-*'
    include '**/repository-*'
    include '**/sdklib-*'
  }
  into "tool"
}
build.dependsOn(copyToLib)

sourceSets {
    main {
        java {
            srcDirs = ["src/"]
        } 
    }
}

clean.doFirst {
    delete "tool"
}

build.doLast {
    // Copy jar file to tool folder
    File toolJar = file("tool/SDKUpdater.jar");
    toolJar.mkdirs();
    Files.copy(file("$buildDir/libs/SDKUpdater.jar").toPath(),
               toolJar.toPath(), REPLACE_EXISTING);                   
}
